# Maintainer: Horror Proton <107091537+horror-proton@users.noreply.github.com>

# shellcheck disable=SC2034 disable=SC2164
pkgname=maa-assistant-arknights-git
pkgver=5.0.0beta.2.r1.6032d0d1c
pkgrel=1
pkgdesc="An Arknights assistant"
arch=(x86_64)
url="https://github.com/MaaAssistantArknights/MaaAssistantArknights"
license=('AGPL')
depends=(opencv onnxruntime cpr)
makedepends=(asio eigen git cmake)
provides=("${pkgname%-git}")
conflicts=("${pkgname%-git}")
source=("MaaAssistantArknights::git+$url.git#branch=dev"
        'FastDeploy::git+https://github.com/MaaAssistantArknights/FastDeploy.git#branch=master')
md5sums=('SKIP'
         'SKIP')

if ((WITH_GPU)); then
    depends+=( cuda )
fi

pkgver() {
    cd "$srcdir/MaaAssistantArknights"
    git describe --long --tags --match='v*' | rev | sed 's/-//3' | rev | sed 's/^v//;s/\([^-]*-\)g/r\1/;s/-/./g'
}

prepare() {
    cd "$srcdir/MaaAssistantArknights"
    sed -e 's/RUNTIME\sDESTINATION\s\./ /g' \
        -e 's/LIBRARY\sDESTINATION\s\./ /g' \
        -e 's/PUBLIC_HEADER\sDESTINATION\s\./ /g' -i CMakeLists.txt
    sed -e 's/find_package(asio /# find_package(asio /g' \
        -e 's/find_package(MaaDerpLearning/# find_package(MaaDerpLearning/g' \
        -e 's/asio::asio/ /g' -i CMakeLists.txt
    sed -i "7i""add_subdirectory(\${SOURCE_DIR_FASTDEPLOY} \${BINARY_DIR_FASTDEPLOY} EXCLUDE_FROM_ALL SYSTEM) \\
        include_directories(SYSTEM \${SOURCE_DIR_FASTDEPLOY}) \\
        install(TARGETS MaaDerpLearning)" CMakeLists.txt

    shopt -s globstar nullglob
    sed -i 's/onnxruntime\/core\/session\///g' src/MaaCore/**/{*.h,*.cpp,*.hpp,*.cc}

    cp -v "$srcdir"/FastDeploy/cmake/Findonnxruntime.cmake cmake
    sed -i 's/ONNXRuntime/onnxruntime/g' CMakeLists.txt

    cd "$srcdir"/FastDeploy
    sed -i 's/fastdeploy_ppocr/MaaDerpLearning/g' CMakeLists.txt # git revert -n 0ef77d332
}

build() {
    cd "$srcdir"

    local _cmake_flags=(
        -DCMAKE_BUILD_TYPE=None
        -DUSE_MAADEPS=OFF
        -DINSTALL_RESOURCE=ON
        -DINSTALL_PYTHON=ON
        -DBUILD_SHARED_LIBS=ON
        -DCMAKE_POSITION_INDEPENDENT_CODE=ON
        -DCMAKE_INSTALL_PREFIX="$pkgdir"/usr
        -DMAA_VERSION=v"$pkgver"
        -DSOURCE_DIR_FASTDEPLOY="$srcdir"/FastDeploy
        -DBINARY_DIR_FASTDEPLOY="$srcdir"/build-FastDeploy
    )

    if ((WITH_GPU)); then
        _cmake_flags+=( -DWITH_GPU=ON -DCUDA_DIRECTORY=/opt/cuda -DCUDA_ARCH_NAME=Auto )
    fi

    CXXFLAGS+=" -fmacro-prefix-map=$srcdir=${DBGSRCDIR:-/usr/src/debug}/${pkgbase}"
    CXXFLAGS+=" -isystem /usr/include/onnxruntime/core/session" # in case onnxruntime<=1.15

    cmake -B build -S MaaAssistantArknights "${_cmake_flags[@]}"
    cmake --build build
}

package() {
    cd "$srcdir"
    cmake --install build --prefix "$pkgdir"/usr

    cd "$pkgdir"/usr/
    mkdir -p share/"${pkgname%-git}"
    mv Python resource share/"${pkgname%-git}"
    ln -sr lib/* share/"${pkgname%-git}"
}
